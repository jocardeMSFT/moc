// Code generated by protoc-gen-go. DO NOT EDIT.
// source: moc_nodeagent_virtualnetwork.proto

package network

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	common "github.com/microsoft/moc/rpc/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VirtualNetworkType int32

const (
	VirtualNetworkType_NAT         VirtualNetworkType = 0
	VirtualNetworkType_Transparent VirtualNetworkType = 1
	VirtualNetworkType_L2Bridge    VirtualNetworkType = 2
	VirtualNetworkType_L2Tunnel    VirtualNetworkType = 3
	VirtualNetworkType_ICS         VirtualNetworkType = 4
	VirtualNetworkType_Private     VirtualNetworkType = 5
	VirtualNetworkType_Overlay     VirtualNetworkType = 6
	VirtualNetworkType_Internal    VirtualNetworkType = 7
	VirtualNetworkType_Mirrored    VirtualNetworkType = 8
)

var VirtualNetworkType_name = map[int32]string{
	0: "NAT",
	1: "Transparent",
	2: "L2Bridge",
	3: "L2Tunnel",
	4: "ICS",
	5: "Private",
	6: "Overlay",
	7: "Internal",
	8: "Mirrored",
}

var VirtualNetworkType_value = map[string]int32{
	"NAT":         0,
	"Transparent": 1,
	"L2Bridge":    2,
	"L2Tunnel":    3,
	"ICS":         4,
	"Private":     5,
	"Overlay":     6,
	"Internal":    7,
	"Mirrored":    8,
}

func (x VirtualNetworkType) String() string {
	return proto.EnumName(VirtualNetworkType_name, int32(x))
}

func (VirtualNetworkType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f1b8ece8397de968, []int{0}
}

type VirtualNetworkRequest struct {
	VirtualNetworks      []*VirtualNetwork `protobuf:"bytes,1,rep,name=VirtualNetworks,proto3" json:"VirtualNetworks,omitempty"`
	OperationType        common.Operation  `protobuf:"varint,2,opt,name=OperationType,proto3,enum=moc.Operation" json:"OperationType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VirtualNetworkRequest) Reset()         { *m = VirtualNetworkRequest{} }
func (m *VirtualNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*VirtualNetworkRequest) ProtoMessage()    {}
func (*VirtualNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1b8ece8397de968, []int{0}
}

func (m *VirtualNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualNetworkRequest.Unmarshal(m, b)
}
func (m *VirtualNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualNetworkRequest.Marshal(b, m, deterministic)
}
func (m *VirtualNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualNetworkRequest.Merge(m, src)
}
func (m *VirtualNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_VirtualNetworkRequest.Size(m)
}
func (m *VirtualNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualNetworkRequest proto.InternalMessageInfo

func (m *VirtualNetworkRequest) GetVirtualNetworks() []*VirtualNetwork {
	if m != nil {
		return m.VirtualNetworks
	}
	return nil
}

func (m *VirtualNetworkRequest) GetOperationType() common.Operation {
	if m != nil {
		return m.OperationType
	}
	return common.Operation_GET
}

type VirtualNetworkResponse struct {
	VirtualNetworks      []*VirtualNetwork   `protobuf:"bytes,1,rep,name=VirtualNetworks,proto3" json:"VirtualNetworks,omitempty"`
	Result               *wrappers.BoolValue `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
	Error                string              `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *VirtualNetworkResponse) Reset()         { *m = VirtualNetworkResponse{} }
func (m *VirtualNetworkResponse) String() string { return proto.CompactTextString(m) }
func (*VirtualNetworkResponse) ProtoMessage()    {}
func (*VirtualNetworkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1b8ece8397de968, []int{1}
}

func (m *VirtualNetworkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualNetworkResponse.Unmarshal(m, b)
}
func (m *VirtualNetworkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualNetworkResponse.Marshal(b, m, deterministic)
}
func (m *VirtualNetworkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualNetworkResponse.Merge(m, src)
}
func (m *VirtualNetworkResponse) XXX_Size() int {
	return xxx_messageInfo_VirtualNetworkResponse.Size(m)
}
func (m *VirtualNetworkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualNetworkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualNetworkResponse proto.InternalMessageInfo

func (m *VirtualNetworkResponse) GetVirtualNetworks() []*VirtualNetwork {
	if m != nil {
		return m.VirtualNetworks
	}
	return nil
}

func (m *VirtualNetworkResponse) GetResult() *wrappers.BoolValue {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *VirtualNetworkResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type VirtualNetwork struct {
	Name                 string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   string             `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Ipams                []*Ipam            `protobuf:"bytes,3,rep,name=ipams,proto3" json:"ipams,omitempty"`
	Dns                  *common.Dns        `protobuf:"bytes,4,opt,name=dns,proto3" json:"dns,omitempty"`
	Type                 VirtualNetworkType `protobuf:"varint,5,opt,name=type,proto3,enum=moc.nodeagent.network.VirtualNetworkType" json:"type,omitempty"`
	MacPool              *MacPool           `protobuf:"bytes,6,opt,name=macPool,proto3" json:"macPool,omitempty"`
	Status               *common.Status     `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Entity               *common.Entity     `protobuf:"bytes,9,opt,name=entity,proto3" json:"entity,omitempty"`
	Tags                 *common.Tags       `protobuf:"bytes,10,opt,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *VirtualNetwork) Reset()         { *m = VirtualNetwork{} }
func (m *VirtualNetwork) String() string { return proto.CompactTextString(m) }
func (*VirtualNetwork) ProtoMessage()    {}
func (*VirtualNetwork) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1b8ece8397de968, []int{2}
}

func (m *VirtualNetwork) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualNetwork.Unmarshal(m, b)
}
func (m *VirtualNetwork) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualNetwork.Marshal(b, m, deterministic)
}
func (m *VirtualNetwork) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualNetwork.Merge(m, src)
}
func (m *VirtualNetwork) XXX_Size() int {
	return xxx_messageInfo_VirtualNetwork.Size(m)
}
func (m *VirtualNetwork) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualNetwork.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualNetwork proto.InternalMessageInfo

func (m *VirtualNetwork) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VirtualNetwork) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VirtualNetwork) GetIpams() []*Ipam {
	if m != nil {
		return m.Ipams
	}
	return nil
}

func (m *VirtualNetwork) GetDns() *common.Dns {
	if m != nil {
		return m.Dns
	}
	return nil
}

func (m *VirtualNetwork) GetType() VirtualNetworkType {
	if m != nil {
		return m.Type
	}
	return VirtualNetworkType_NAT
}

func (m *VirtualNetwork) GetMacPool() *MacPool {
	if m != nil {
		return m.MacPool
	}
	return nil
}

func (m *VirtualNetwork) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *VirtualNetwork) GetEntity() *common.Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *VirtualNetwork) GetTags() *common.Tags {
	if m != nil {
		return m.Tags
	}
	return nil
}

type MacRange struct {
	StartMacAddress      string   `protobuf:"bytes,1,opt,name=startMacAddress,proto3" json:"startMacAddress,omitempty"`
	EndMacAddress        string   `protobuf:"bytes,2,opt,name=endMacAddress,proto3" json:"endMacAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MacRange) Reset()         { *m = MacRange{} }
func (m *MacRange) String() string { return proto.CompactTextString(m) }
func (*MacRange) ProtoMessage()    {}
func (*MacRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1b8ece8397de968, []int{3}
}

func (m *MacRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacRange.Unmarshal(m, b)
}
func (m *MacRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacRange.Marshal(b, m, deterministic)
}
func (m *MacRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacRange.Merge(m, src)
}
func (m *MacRange) XXX_Size() int {
	return xxx_messageInfo_MacRange.Size(m)
}
func (m *MacRange) XXX_DiscardUnknown() {
	xxx_messageInfo_MacRange.DiscardUnknown(m)
}

var xxx_messageInfo_MacRange proto.InternalMessageInfo

func (m *MacRange) GetStartMacAddress() string {
	if m != nil {
		return m.StartMacAddress
	}
	return ""
}

func (m *MacRange) GetEndMacAddress() string {
	if m != nil {
		return m.EndMacAddress
	}
	return ""
}

type MacPool struct {
	Ranges               []*MacRange `protobuf:"bytes,1,rep,name=ranges,proto3" json:"ranges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MacPool) Reset()         { *m = MacPool{} }
func (m *MacPool) String() string { return proto.CompactTextString(m) }
func (*MacPool) ProtoMessage()    {}
func (*MacPool) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1b8ece8397de968, []int{4}
}

func (m *MacPool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacPool.Unmarshal(m, b)
}
func (m *MacPool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacPool.Marshal(b, m, deterministic)
}
func (m *MacPool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacPool.Merge(m, src)
}
func (m *MacPool) XXX_Size() int {
	return xxx_messageInfo_MacPool.Size(m)
}
func (m *MacPool) XXX_DiscardUnknown() {
	xxx_messageInfo_MacPool.DiscardUnknown(m)
}

var xxx_messageInfo_MacPool proto.InternalMessageInfo

func (m *MacPool) GetRanges() []*MacRange {
	if m != nil {
		return m.Ranges
	}
	return nil
}

type Subnet struct {
	Name                 string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   string                    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Cidr                 string                    `protobuf:"bytes,3,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Routes               []*common.Route           `protobuf:"bytes,4,rep,name=routes,proto3" json:"routes,omitempty"`
	Allocation           common.IPAllocationMethod `protobuf:"varint,5,opt,name=allocation,proto3,enum=moc.IPAllocationMethod" json:"allocation,omitempty"`
	Vlan                 uint32                    `protobuf:"varint,6,opt,name=vlan,proto3" json:"vlan,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Subnet) Reset()         { *m = Subnet{} }
func (m *Subnet) String() string { return proto.CompactTextString(m) }
func (*Subnet) ProtoMessage()    {}
func (*Subnet) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1b8ece8397de968, []int{5}
}

func (m *Subnet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subnet.Unmarshal(m, b)
}
func (m *Subnet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subnet.Marshal(b, m, deterministic)
}
func (m *Subnet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subnet.Merge(m, src)
}
func (m *Subnet) XXX_Size() int {
	return xxx_messageInfo_Subnet.Size(m)
}
func (m *Subnet) XXX_DiscardUnknown() {
	xxx_messageInfo_Subnet.DiscardUnknown(m)
}

var xxx_messageInfo_Subnet proto.InternalMessageInfo

func (m *Subnet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Subnet) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Subnet) GetCidr() string {
	if m != nil {
		return m.Cidr
	}
	return ""
}

func (m *Subnet) GetRoutes() []*common.Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

func (m *Subnet) GetAllocation() common.IPAllocationMethod {
	if m != nil {
		return m.Allocation
	}
	return common.IPAllocationMethod_Invalid
}

func (m *Subnet) GetVlan() uint32 {
	if m != nil {
		return m.Vlan
	}
	return 0
}

type Ipam struct {
	Type                 string    `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Subnets              []*Subnet `protobuf:"bytes,2,rep,name=subnets,proto3" json:"subnets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Ipam) Reset()         { *m = Ipam{} }
func (m *Ipam) String() string { return proto.CompactTextString(m) }
func (*Ipam) ProtoMessage()    {}
func (*Ipam) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1b8ece8397de968, []int{6}
}

func (m *Ipam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipam.Unmarshal(m, b)
}
func (m *Ipam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipam.Marshal(b, m, deterministic)
}
func (m *Ipam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipam.Merge(m, src)
}
func (m *Ipam) XXX_Size() int {
	return xxx_messageInfo_Ipam.Size(m)
}
func (m *Ipam) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipam.DiscardUnknown(m)
}

var xxx_messageInfo_Ipam proto.InternalMessageInfo

func (m *Ipam) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Ipam) GetSubnets() []*Subnet {
	if m != nil {
		return m.Subnets
	}
	return nil
}

func init() {
	proto.RegisterEnum("moc.nodeagent.network.VirtualNetworkType", VirtualNetworkType_name, VirtualNetworkType_value)
	proto.RegisterType((*VirtualNetworkRequest)(nil), "moc.nodeagent.network.VirtualNetworkRequest")
	proto.RegisterType((*VirtualNetworkResponse)(nil), "moc.nodeagent.network.VirtualNetworkResponse")
	proto.RegisterType((*VirtualNetwork)(nil), "moc.nodeagent.network.VirtualNetwork")
	proto.RegisterType((*MacRange)(nil), "moc.nodeagent.network.MacRange")
	proto.RegisterType((*MacPool)(nil), "moc.nodeagent.network.MacPool")
	proto.RegisterType((*Subnet)(nil), "moc.nodeagent.network.Subnet")
	proto.RegisterType((*Ipam)(nil), "moc.nodeagent.network.Ipam")
}

func init() {
	proto.RegisterFile("moc_nodeagent_virtualnetwork.proto", fileDescriptor_f1b8ece8397de968)
}

var fileDescriptor_f1b8ece8397de968 = []byte{
	// 854 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x5e, 0xe7, 0xc7, 0x49, 0x4f, 0x68, 0xeb, 0x1d, 0xd8, 0xae, 0xc9, 0xd2, 0x52, 0x19, 0x21,
	0x95, 0xd5, 0xe2, 0x40, 0x58, 0xa9, 0xdc, 0x70, 0xd1, 0x2c, 0x95, 0x08, 0x22, 0x6d, 0x35, 0x8d,
	0xf6, 0x82, 0x9b, 0xd5, 0xd4, 0x9e, 0xb8, 0xa3, 0xda, 0x33, 0x66, 0x66, 0x9c, 0xdd, 0xbe, 0x01,
	0xbc, 0x04, 0x2f, 0x81, 0x78, 0x07, 0x78, 0x1c, 0xde, 0x00, 0xcd, 0x78, 0x52, 0x92, 0x94, 0x48,
	0xbd, 0xd8, 0x2b, 0x7b, 0xe6, 0xfb, 0xce, 0x39, 0xdf, 0xf9, 0x7c, 0x74, 0x0c, 0x51, 0x21, 0x92,
	0x37, 0x5c, 0xa4, 0x94, 0x64, 0x94, 0xeb, 0x37, 0x73, 0x26, 0x75, 0x45, 0x72, 0x4e, 0xf5, 0x5b,
	0x21, 0x6f, 0xe2, 0x52, 0x0a, 0x2d, 0xd0, 0x93, 0x42, 0x24, 0xf1, 0x1d, 0x27, 0x76, 0x60, 0xff,
	0x20, 0x13, 0x22, 0xcb, 0xe9, 0xc0, 0x92, 0xae, 0xaa, 0xd9, 0xe0, 0xad, 0x24, 0x65, 0x49, 0xa5,
	0xaa, 0xc3, 0xfa, 0xcf, 0xd6, 0x71, 0x5a, 0x94, 0xfa, 0xd6, 0x81, 0x4f, 0x4d, 0xdd, 0x44, 0x14,
	0x85, 0xe0, 0xee, 0xe1, 0x80, 0x83, 0x25, 0xc0, 0x55, 0x5a, 0xc1, 0xf7, 0x97, 0x71, 0xa1, 0xd9,
	0x8c, 0x25, 0x44, 0xb3, 0x05, 0x1c, 0xfd, 0xee, 0xc1, 0x93, 0xd7, 0x75, 0x13, 0x67, 0x75, 0x34,
	0xa6, 0xbf, 0x54, 0x54, 0x69, 0x74, 0x0e, 0xbb, 0xab, 0x80, 0x0a, 0xbd, 0xc3, 0xe6, 0x51, 0x6f,
	0xf8, 0x79, 0xfc, 0xbf, 0xfd, 0xc5, 0x6b, 0x69, 0xd6, 0xa3, 0xd1, 0x4b, 0xd8, 0x3e, 0x2f, 0xa9,
	0xb4, 0xd5, 0xa7, 0xb7, 0x25, 0x0d, 0x1b, 0x87, 0xde, 0xd1, 0xce, 0x70, 0xc7, 0xa6, 0xbb, 0x43,
	0xf0, 0x2a, 0x29, 0xfa, 0xc3, 0x83, 0xbd, 0x75, 0x81, 0xaa, 0x14, 0x5c, 0xd1, 0xf7, 0xaf, 0x70,
	0x08, 0x3e, 0xa6, 0xaa, 0xca, 0xb5, 0x95, 0xd6, 0x1b, 0xf6, 0xe3, 0xfa, 0x93, 0xc4, 0x8b, 0x4f,
	0x12, 0x8f, 0x84, 0xc8, 0x5f, 0x93, 0xbc, 0xa2, 0xd8, 0x31, 0xd1, 0x47, 0xd0, 0x3e, 0x95, 0x52,
	0xc8, 0xb0, 0x79, 0xe8, 0x1d, 0x6d, 0xe1, 0xfa, 0x10, 0xfd, 0xd3, 0x80, 0x9d, 0xd5, 0xec, 0x08,
	0x41, 0x8b, 0x93, 0x82, 0x86, 0x9e, 0xe5, 0xd9, 0x77, 0xb4, 0x03, 0x0d, 0x96, 0xda, 0x62, 0x5b,
	0xb8, 0xc1, 0x52, 0xf4, 0x35, 0xb4, 0x59, 0x49, 0x0a, 0x15, 0x36, 0x6d, 0x1f, 0xcf, 0x36, 0xf4,
	0x31, 0x2e, 0x49, 0x81, 0x6b, 0x26, 0x3a, 0x84, 0x66, 0xca, 0x55, 0xd8, 0xb2, 0x82, 0xbb, 0x36,
	0xe0, 0x7b, 0xae, 0x46, 0xad, 0x5f, 0xff, 0x0c, 0x3d, 0x6c, 0x20, 0xf4, 0x1d, 0xb4, 0xb4, 0xb1,
	0xbb, 0x6d, 0xed, 0xfe, 0xe2, 0x41, 0xde, 0x18, 0xeb, 0xb1, 0x0d, 0x43, 0xdf, 0x42, 0xa7, 0x20,
	0xc9, 0x85, 0x10, 0x79, 0xe8, 0xdb, 0x22, 0x07, 0x1b, 0x32, 0x4c, 0x6a, 0x16, 0x5e, 0xd0, 0xd1,
	0x67, 0xe0, 0x2b, 0x4d, 0x74, 0xa5, 0xc2, 0xae, 0x0d, 0xec, 0xd9, 0xc0, 0x4b, 0x7b, 0x85, 0x1d,
	0x64, 0x48, 0x94, 0x6b, 0xa6, 0x6f, 0xc3, 0xad, 0x25, 0xd2, 0xa9, 0xbd, 0xc2, 0x0e, 0x42, 0xfb,
	0xd0, 0xd2, 0x24, 0x53, 0x21, 0x58, 0xca, 0x96, 0xa5, 0x4c, 0x49, 0xa6, 0xb0, 0xbd, 0xfe, 0xb1,
	0xd5, 0xed, 0x04, 0xdd, 0x68, 0x06, 0xdd, 0x09, 0x49, 0x30, 0xe1, 0x19, 0x45, 0x31, 0xec, 0x2a,
	0x4d, 0xa4, 0x9e, 0x90, 0xe4, 0x24, 0x4d, 0x25, 0x55, 0xaa, 0xf6, 0xdd, 0xf9, 0xb2, 0x0e, 0xa2,
	0xe7, 0xb0, 0x4d, 0x79, 0xba, 0xc4, 0x6e, 0x2c, 0xb1, 0x57, 0xa1, 0x68, 0x04, 0x1d, 0xd7, 0x2a,
	0x3a, 0x06, 0x5f, 0x9a, 0x7a, 0x8b, 0xc1, 0xfb, 0x74, 0xb3, 0x35, 0x56, 0x17, 0x76, 0xf4, 0xe8,
	0x6f, 0x0f, 0xfc, 0xcb, 0xea, 0x8a, 0x53, 0xfd, 0xa0, 0xb9, 0x08, 0xa1, 0x95, 0xb0, 0xd4, 0xcd,
	0x98, 0x53, 0x65, 0x6f, 0xd0, 0x4b, 0xf0, 0xa5, 0xa8, 0x34, 0x35, 0x13, 0x60, 0x14, 0x7c, 0xb2,
	0x41, 0x01, 0x36, 0x24, 0xec, 0xb8, 0xe8, 0x18, 0x80, 0xe4, 0xb9, 0xa8, 0x37, 0x81, 0x1b, 0x8c,
	0xa7, 0x36, 0x72, 0x7c, 0x71, 0x72, 0x07, 0x4c, 0xa8, 0xbe, 0x16, 0x29, 0x5e, 0xa2, 0x1a, 0xb1,
	0xf3, 0x9c, 0x70, 0x3b, 0x09, 0xdb, 0xd8, 0xbe, 0x47, 0x97, 0xd0, 0x32, 0x03, 0x69, 0x30, 0x3b,
	0x67, 0xae, 0x11, 0x3b, 0x3c, 0xc7, 0xd0, 0x51, 0xb6, 0x4d, 0xe3, 0xa8, 0xd1, 0xb7, 0xbf, 0x41,
	0x5f, 0x6d, 0x06, 0x5e, 0xb0, 0xa3, 0x0c, 0xda, 0x56, 0x32, 0x0a, 0xa1, 0xc3, 0xe9, 0x3b, 0x7d,
	0x2d, 0x4a, 0x97, 0x78, 0x71, 0x44, 0x2f, 0xe0, 0x71, 0x4a, 0x95, 0x66, 0xdc, 0x4a, 0x2b, 0x25,
	0x9d, 0xb1, 0x77, 0xce, 0xb3, 0xfb, 0x00, 0xda, 0x03, 0xbf, 0xa0, 0x5a, 0xb2, 0xc4, 0x9a, 0xb8,
	0x8d, 0xdd, 0xe9, 0xf9, 0x6f, 0x1e, 0xa0, 0xfb, 0xb3, 0x8f, 0x3a, 0xd0, 0x3c, 0x3b, 0x99, 0x06,
	0x8f, 0xd0, 0x2e, 0xf4, 0xa6, 0x92, 0x70, 0x55, 0x12, 0x49, 0xb9, 0x0e, 0x3c, 0xf4, 0x01, 0x74,
	0x7f, 0x1a, 0x8e, 0x24, 0x4b, 0x33, 0x1a, 0x34, 0xea, 0xd3, 0xb4, 0xe2, 0x9c, 0xe6, 0x41, 0xd3,
	0x44, 0x8d, 0x5f, 0x5d, 0x06, 0x2d, 0xd4, 0x83, 0xce, 0x85, 0x64, 0x73, 0xa2, 0x69, 0xd0, 0x36,
	0x87, 0xf3, 0x39, 0x95, 0x39, 0xb9, 0x0d, 0x7c, 0x13, 0x30, 0xe6, 0x9a, 0x4a, 0x4e, 0xf2, 0xa0,
	0x63, 0x4e, 0x13, 0x66, 0x36, 0x06, 0x4d, 0x83, 0xee, 0xf0, 0x2f, 0x0f, 0x3e, 0x5c, 0xd5, 0x72,
	0x62, 0x4c, 0x42, 0x19, 0xf8, 0x63, 0x3e, 0x17, 0x37, 0x14, 0xbd, 0x78, 0xd8, 0x66, 0xab, 0x57,
	0x78, 0xff, 0xcb, 0x07, 0xb2, 0xeb, 0x7d, 0x1a, 0x3d, 0x42, 0x3f, 0xc0, 0xe3, 0x57, 0xd7, 0x34,
	0xb9, 0x39, 0x5b, 0xfa, 0x51, 0xa0, 0xbd, 0x7b, 0x5b, 0xf0, 0xd4, 0xfc, 0x98, 0xfa, 0x1f, 0xdb,
	0xec, 0xcb, 0xd4, 0xff, 0x32, 0x8d, 0xbe, 0xfa, 0x39, 0xce, 0x98, 0xbe, 0xae, 0xae, 0xe2, 0x44,
	0x14, 0x83, 0x82, 0x25, 0x52, 0x28, 0x31, 0xd3, 0x83, 0x42, 0x24, 0x03, 0x59, 0x26, 0x83, 0x3b,
	0x51, 0x03, 0x27, 0xea, 0xca, 0xb7, 0xe9, 0xbf, 0xf9, 0x37, 0x00, 0x00, 0xff, 0xff, 0x25, 0x45,
	0x1a, 0x2e, 0x62, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VirtualNetworkAgentClient is the client API for VirtualNetworkAgent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VirtualNetworkAgentClient interface {
	Invoke(ctx context.Context, in *VirtualNetworkRequest, opts ...grpc.CallOption) (*VirtualNetworkResponse, error)
	CheckNotification(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*common.NotificationResponse, error)
}

type virtualNetworkAgentClient struct {
	cc *grpc.ClientConn
}

func NewVirtualNetworkAgentClient(cc *grpc.ClientConn) VirtualNetworkAgentClient {
	return &virtualNetworkAgentClient{cc}
}

func (c *virtualNetworkAgentClient) Invoke(ctx context.Context, in *VirtualNetworkRequest, opts ...grpc.CallOption) (*VirtualNetworkResponse, error) {
	out := new(VirtualNetworkResponse)
	err := c.cc.Invoke(ctx, "/moc.nodeagent.network.VirtualNetworkAgent/Invoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualNetworkAgentClient) CheckNotification(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*common.NotificationResponse, error) {
	out := new(common.NotificationResponse)
	err := c.cc.Invoke(ctx, "/moc.nodeagent.network.VirtualNetworkAgent/CheckNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VirtualNetworkAgentServer is the server API for VirtualNetworkAgent service.
type VirtualNetworkAgentServer interface {
	Invoke(context.Context, *VirtualNetworkRequest) (*VirtualNetworkResponse, error)
	CheckNotification(context.Context, *empty.Empty) (*common.NotificationResponse, error)
}

// UnimplementedVirtualNetworkAgentServer can be embedded to have forward compatible implementations.
type UnimplementedVirtualNetworkAgentServer struct {
}

func (*UnimplementedVirtualNetworkAgentServer) Invoke(ctx context.Context, req *VirtualNetworkRequest) (*VirtualNetworkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Invoke not implemented")
}
func (*UnimplementedVirtualNetworkAgentServer) CheckNotification(ctx context.Context, req *empty.Empty) (*common.NotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckNotification not implemented")
}

func RegisterVirtualNetworkAgentServer(s *grpc.Server, srv VirtualNetworkAgentServer) {
	s.RegisterService(&_VirtualNetworkAgent_serviceDesc, srv)
}

func _VirtualNetworkAgent_Invoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtualNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualNetworkAgentServer).Invoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/moc.nodeagent.network.VirtualNetworkAgent/Invoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualNetworkAgentServer).Invoke(ctx, req.(*VirtualNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualNetworkAgent_CheckNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualNetworkAgentServer).CheckNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/moc.nodeagent.network.VirtualNetworkAgent/CheckNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualNetworkAgentServer).CheckNotification(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _VirtualNetworkAgent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "moc.nodeagent.network.VirtualNetworkAgent",
	HandlerType: (*VirtualNetworkAgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Invoke",
			Handler:    _VirtualNetworkAgent_Invoke_Handler,
		},
		{
			MethodName: "CheckNotification",
			Handler:    _VirtualNetworkAgent_CheckNotification_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "moc_nodeagent_virtualnetwork.proto",
}
