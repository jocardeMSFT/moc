// Copyright (c) Microsoft Corporation.
// Licensed under the Apache v2.0 license.

syntax = "proto3";
option go_package = "github.com/microsoft/moc/rpc/cloudagent/network";
package moc.cloudagent.network;

import "google/protobuf/wrappers.proto";
import "moc_common_common.proto";
import "moc_common_networkcommon.proto";

enum IPPoolType {
	VM = 0;
	VIPPool = 1;
}
message LogicalNetworkRequest {
	repeated LogicalNetwork LogicalNetworks = 1;
	Operation OperationType = 2;
}

message LogicalNetworkResponse {
	repeated LogicalNetwork LogicalNetworks = 1;
	google.protobuf.BoolValue Result = 2;
	string  Error = 3;
}

message LogicalNetwork {
	reserved 11; // TODO: Why is this reserved?
	string name = 1;
	string id = 2;
	repeated Subnet subnets = 3;
	google.protobuf.BoolValue networkVirtualizationEnabled = 4;
	string nodefqdn = 5;
	Status status = 6;
	string locationName = 7;
	Tags tags = 8;
}

message Subnet {
	string name = 1;
	string id = 2;
	string addressPrefix = 3;
	repeated Route routes = 4;
	IPAllocationMethod allocation = 5;
	uint32 vlan = 6;
	repeated IPPool ipPools = 7;
	repeated Dns dns = 8; // TODO: In Vnet, dns is per Vnet and not per subnet, however, NC REST resource shows dns per subnet for Lnet, hence moved it here, double check once.
	google.protobuf.BoolValue isPublic = 9;
}

message IPPoolInfo {
	string used = 1;
	string available = 2;
}

message IPPool {
	string name = 1;
	IPPoolType type = 2;
	string start = 3;
	string end = 4;
	IPPoolInfo info = 5;
}

message Route {
	string nextHop = 1;
	string destinationPrefix = 2;
	uint32 metric = 3; // TODO: What is this? FabricRoute in official/rs_onecore_liof1_sdn does not have this property.
}

service LogicalNetworkAgent {
	rpc Invoke(LogicalNetworkRequest) returns (LogicalNetworkResponse) {}
}

