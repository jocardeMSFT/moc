// Code generated by protoc-gen-go. DO NOT EDIT.
// source: moc_common_networkcommon.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Protocol int32

const (
	Protocol_All Protocol = 0
	Protocol_Tcp Protocol = 1
	Protocol_Udp Protocol = 2
)

var Protocol_name = map[int32]string{
	0: "All",
	1: "Tcp",
	2: "Udp",
}

var Protocol_value = map[string]int32{
	"All": 0,
	"Tcp": 1,
	"Udp": 2,
}

func (x Protocol) String() string {
	return proto.EnumName(Protocol_name, int32(x))
}

func (Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ba09ae1dfdbe03d2, []int{0}
}

type IPAllocationMethod int32

const (
	IPAllocationMethod_Invalid IPAllocationMethod = 0
	IPAllocationMethod_Dynamic IPAllocationMethod = 1
	IPAllocationMethod_Static  IPAllocationMethod = 2
)

var IPAllocationMethod_name = map[int32]string{
	0: "Invalid",
	1: "Dynamic",
	2: "Static",
}

var IPAllocationMethod_value = map[string]int32{
	"Invalid": 0,
	"Dynamic": 1,
	"Static":  2,
}

func (x IPAllocationMethod) String() string {
	return proto.EnumName(IPAllocationMethod_name, int32(x))
}

func (IPAllocationMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ba09ae1dfdbe03d2, []int{1}
}

type IPPoolType int32

const (
	IPPoolType_VM      IPPoolType = 0
	IPPoolType_VIPPool IPPoolType = 1
)

var IPPoolType_name = map[int32]string{
	0: "VM",
	1: "VIPPool",
}

var IPPoolType_value = map[string]int32{
	"VM":      0,
	"VIPPool": 1,
}

func (x IPPoolType) String() string {
	return proto.EnumName(IPPoolType_name, int32(x))
}

func (IPPoolType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ba09ae1dfdbe03d2, []int{2}
}

type Dns struct {
	Servers              []string `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	Domain               string   `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Search               []string `protobuf:"bytes,3,rep,name=search,proto3" json:"search,omitempty"`
	Options              []string `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dns) Reset()         { *m = Dns{} }
func (m *Dns) String() string { return proto.CompactTextString(m) }
func (*Dns) ProtoMessage()    {}
func (*Dns) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba09ae1dfdbe03d2, []int{0}
}

func (m *Dns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dns.Unmarshal(m, b)
}
func (m *Dns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dns.Marshal(b, m, deterministic)
}
func (m *Dns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dns.Merge(m, src)
}
func (m *Dns) XXX_Size() int {
	return xxx_messageInfo_Dns.Size(m)
}
func (m *Dns) XXX_DiscardUnknown() {
	xxx_messageInfo_Dns.DiscardUnknown(m)
}

var xxx_messageInfo_Dns proto.InternalMessageInfo

func (m *Dns) GetServers() []string {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *Dns) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Dns) GetSearch() []string {
	if m != nil {
		return m.Search
	}
	return nil
}

func (m *Dns) GetOptions() []string {
	if m != nil {
		return m.Options
	}
	return nil
}

type IPPoolInfo struct {
	Used                 string   `protobuf:"bytes,1,opt,name=used,proto3" json:"used,omitempty"`
	Available            string   `protobuf:"bytes,2,opt,name=available,proto3" json:"available,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPPoolInfo) Reset()         { *m = IPPoolInfo{} }
func (m *IPPoolInfo) String() string { return proto.CompactTextString(m) }
func (*IPPoolInfo) ProtoMessage()    {}
func (*IPPoolInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba09ae1dfdbe03d2, []int{1}
}

func (m *IPPoolInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPPoolInfo.Unmarshal(m, b)
}
func (m *IPPoolInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPPoolInfo.Marshal(b, m, deterministic)
}
func (m *IPPoolInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPPoolInfo.Merge(m, src)
}
func (m *IPPoolInfo) XXX_Size() int {
	return xxx_messageInfo_IPPoolInfo.Size(m)
}
func (m *IPPoolInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IPPoolInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IPPoolInfo proto.InternalMessageInfo

func (m *IPPoolInfo) GetUsed() string {
	if m != nil {
		return m.Used
	}
	return ""
}

func (m *IPPoolInfo) GetAvailable() string {
	if m != nil {
		return m.Available
	}
	return ""
}

type IPPool struct {
	Name                 string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 IPPoolType  `protobuf:"varint,2,opt,name=type,proto3,enum=moc.IPPoolType" json:"type,omitempty"`
	Start                string      `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End                  string      `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	Info                 *IPPoolInfo `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *IPPool) Reset()         { *m = IPPool{} }
func (m *IPPool) String() string { return proto.CompactTextString(m) }
func (*IPPool) ProtoMessage()    {}
func (*IPPool) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba09ae1dfdbe03d2, []int{2}
}

func (m *IPPool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPPool.Unmarshal(m, b)
}
func (m *IPPool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPPool.Marshal(b, m, deterministic)
}
func (m *IPPool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPPool.Merge(m, src)
}
func (m *IPPool) XXX_Size() int {
	return xxx_messageInfo_IPPool.Size(m)
}
func (m *IPPool) XXX_DiscardUnknown() {
	xxx_messageInfo_IPPool.DiscardUnknown(m)
}

var xxx_messageInfo_IPPool proto.InternalMessageInfo

func (m *IPPool) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IPPool) GetType() IPPoolType {
	if m != nil {
		return m.Type
	}
	return IPPoolType_VM
}

func (m *IPPool) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *IPPool) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *IPPool) GetInfo() *IPPoolInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type Route struct {
	NextHop              string   `protobuf:"bytes,1,opt,name=nextHop,proto3" json:"nextHop,omitempty"`
	DestinationPrefix    string   `protobuf:"bytes,2,opt,name=destinationPrefix,proto3" json:"destinationPrefix,omitempty"`
	Metric               uint32   `protobuf:"varint,3,opt,name=metric,proto3" json:"metric,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba09ae1dfdbe03d2, []int{3}
}

func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetNextHop() string {
	if m != nil {
		return m.NextHop
	}
	return ""
}

func (m *Route) GetDestinationPrefix() string {
	if m != nil {
		return m.DestinationPrefix
	}
	return ""
}

func (m *Route) GetMetric() uint32 {
	if m != nil {
		return m.Metric
	}
	return 0
}

func init() {
	proto.RegisterEnum("moc.Protocol", Protocol_name, Protocol_value)
	proto.RegisterEnum("moc.IPAllocationMethod", IPAllocationMethod_name, IPAllocationMethod_value)
	proto.RegisterEnum("moc.IPPoolType", IPPoolType_name, IPPoolType_value)
	proto.RegisterType((*Dns)(nil), "moc.Dns")
	proto.RegisterType((*IPPoolInfo)(nil), "moc.IPPoolInfo")
	proto.RegisterType((*IPPool)(nil), "moc.IPPool")
	proto.RegisterType((*Route)(nil), "moc.Route")
}

func init() { proto.RegisterFile("moc_common_networkcommon.proto", fileDescriptor_ba09ae1dfdbe03d2) }

var fileDescriptor_ba09ae1dfdbe03d2 = []byte{
	// 424 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xc1, 0x8b, 0x13, 0x31,
	0x14, 0xc6, 0x77, 0x3a, 0xed, 0xd4, 0xbe, 0x45, 0x1d, 0x83, 0x48, 0x0e, 0x22, 0xb5, 0xcb, 0x42,
	0x29, 0xd2, 0x82, 0xde, 0x3c, 0x08, 0x2b, 0x7b, 0xb0, 0x87, 0x85, 0x61, 0x5c, 0xf7, 0xe0, 0x65,
	0x49, 0x33, 0xe9, 0x36, 0x98, 0xe4, 0x85, 0x24, 0xad, 0xdb, 0x7f, 0xc2, 0xbf, 0x59, 0x92, 0x4c,
	0x11, 0xd9, 0xdb, 0xf7, 0x7b, 0x6f, 0xbe, 0x6f, 0x5e, 0x5e, 0x02, 0xef, 0x34, 0xf2, 0x7b, 0x8e,
	0x5a, 0xa3, 0xb9, 0x37, 0x22, 0xfc, 0x46, 0xf7, 0x2b, 0xd3, 0xd2, 0x3a, 0x0c, 0x48, 0x4a, 0x8d,
	0x7c, 0x26, 0xa1, 0xbc, 0x36, 0x9e, 0x50, 0x18, 0x7b, 0xe1, 0x0e, 0xc2, 0x79, 0x5a, 0x4c, 0xcb,
	0xf9, 0xa4, 0x3d, 0x21, 0x79, 0x03, 0x55, 0x87, 0x9a, 0x49, 0x43, 0x07, 0xd3, 0x62, 0x3e, 0x69,
	0x7b, 0x8a, 0x75, 0x2f, 0x98, 0xe3, 0x3b, 0x5a, 0x26, 0x43, 0x4f, 0x31, 0x09, 0x6d, 0x90, 0x68,
	0x3c, 0x1d, 0xe6, 0xa4, 0x1e, 0x67, 0x5f, 0x00, 0xd6, 0x4d, 0x83, 0xa8, 0xd6, 0x66, 0x8b, 0x84,
	0xc0, 0x70, 0xef, 0x45, 0x47, 0x8b, 0x94, 0x9a, 0x34, 0x79, 0x0b, 0x13, 0x76, 0x60, 0x52, 0xb1,
	0x8d, 0x12, 0xfd, 0xef, 0xfe, 0x15, 0x66, 0x7f, 0x0a, 0xa8, 0x72, 0x40, 0x34, 0x1b, 0xa6, 0xc5,
	0xc9, 0x1c, 0x35, 0xb9, 0x80, 0x61, 0x38, 0xda, 0xec, 0x7b, 0xf1, 0xf1, 0xe5, 0x52, 0x23, 0x5f,
	0xe6, 0xcf, 0x6f, 0x8f, 0x56, 0xb4, 0xa9, 0x49, 0x5e, 0xc3, 0xc8, 0x07, 0xe6, 0x02, 0x2d, 0x93,
	0x33, 0x03, 0xa9, 0xa1, 0x14, 0xa6, 0xa3, 0xc3, 0x54, 0x8b, 0x32, 0x86, 0x49, 0xb3, 0x45, 0x3a,
	0x9a, 0x16, 0xf3, 0xf3, 0xff, 0xc2, 0xe2, 0xf0, 0x6d, 0x6a, 0xce, 0x1e, 0x60, 0xd4, 0xe2, 0x3e,
	0x88, 0x78, 0x66, 0x23, 0x1e, 0xc3, 0x37, 0xb4, 0xfd, 0x44, 0x27, 0x24, 0x1f, 0xe0, 0x55, 0x27,
	0x7c, 0x90, 0x86, 0xc5, 0x1d, 0x34, 0x4e, 0x6c, 0xe5, 0x63, 0x7f, 0xb2, 0xa7, 0x8d, 0xb8, 0x53,
	0x2d, 0x82, 0x93, 0x3c, 0x8d, 0xf7, 0xbc, 0xed, 0x69, 0x71, 0x09, 0xcf, 0x9a, 0x78, 0x65, 0x1c,
	0x15, 0x19, 0x43, 0x79, 0xa5, 0x54, 0x7d, 0x16, 0xc5, 0x2d, 0xb7, 0x75, 0x11, 0xc5, 0x8f, 0xce,
	0xd6, 0x83, 0xc5, 0x67, 0x20, 0xeb, 0xe6, 0x4a, 0x29, 0xe4, 0x29, 0xf4, 0x46, 0x84, 0x1d, 0x76,
	0xe4, 0x1c, 0xc6, 0x6b, 0x73, 0x60, 0x4a, 0x76, 0xf5, 0x59, 0x84, 0xeb, 0xa3, 0x61, 0x5a, 0xf2,
	0xba, 0x20, 0x00, 0xd5, 0xf7, 0xc0, 0x82, 0xe4, 0xf5, 0x60, 0xf1, 0xfe, 0x74, 0x39, 0x71, 0x59,
	0xa4, 0x82, 0xc1, 0xdd, 0x4d, 0xfe, 0xfc, 0x2e, 0x97, 0xeb, 0xe2, 0xeb, 0xe5, 0xcf, 0x8b, 0x07,
	0x19, 0x76, 0xfb, 0xcd, 0x92, 0xa3, 0x5e, 0x69, 0xc9, 0x1d, 0x7a, 0xdc, 0x86, 0x95, 0x46, 0xbe,
	0x72, 0x96, 0xaf, 0xf2, 0xe3, 0xda, 0x54, 0xe9, 0x75, 0x7d, 0xfa, 0x1b, 0x00, 0x00, 0xff, 0xff,
	0x26, 0xcb, 0x86, 0xce, 0x7f, 0x02, 0x00, 0x00,
}
